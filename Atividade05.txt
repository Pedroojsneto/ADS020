1. Criar um servlet para listar alunos.

a) Abra o aplicativo NetBeans IDE.

b) No menu Arquivo escolha a opção Novo Projeto. Selecione a categoria Java Web e o projeto Aplicação Web.

c) Prossiga definindo o nome Atividade05 ao projeto. Verifique se a localização do projeto está indicando a pasta ADS020. Senão estiver, localize-a acionando Procurar.

d) Escolha o servidor Apache Tomcat como ambiente de execução. Deixe desmarcado todos os frameworks e finalize o assistente.

e) Importe o pacote Atividade01.jar que foi gerado na Atividade01.

f) Crie um pacote controle clicando com o botão direito sobre Pacotes de Código-fonte.

g) Crie um servlet ListarAlunoServlet dentro do pacote controle.

h) Faça o padrão de URL do servlet ser "/aluno" (Dica: urlPatterns = {"/aluno"}).

i) Apague o corpo do método doGet() para que seja implementado a listagem de alunos. 

j) Dentro do metodo declare uma variável lista do tipo List<Aluno> e inicialize-a com uma instância de ArrayList<Aluno>.

k) Declare uma variável bo e inicialize-a com uma instância de AlunoBO.

l) Chame o método listar() da variável bo e armazene o retorno na variável lista.

m) Repasse a exceção NegocioException como ServletException.

try {
   lista = bo.listar();
} catch (NegocioException e) {
   throw new ServletException("", NegocioException);
}
 
n) Altere o conteúdo da resposta HTTP para um texto HTML com a codificação UTF-8.

response.setContentType("text/html;charset=UTF-8");

o) Crie uma variável out do tipo PrintWriter e inicialize-a a partir do método getWriter() do variável response.

PrintWriter out = response.getWriter();

p) Utilize o método println() da variável out para imprimir a seguinte página HTML (Dica: siga a mesma lógica do método processRequest()).

<!DOCTYPE html>
<html>
<head>
<title>Cadastro de Alunos</title>
</head>
<body> 
	<h1>Listagem de Alunos</h1>
  	<table>
    		<tr>
			<th>Matrícula</th>
			<th>Nome</th>
			<th>Ações</th>       
    		</tr>
  	</table>
</body>
</html>

q) Faça um laço que percorra os itens da variável lista e imprima os dados dos alunos (Dica: insira o código entre a linha que imprime </tr> e a linha que imprime </table>.

out.println("</tr>");

for(Aluno aluno: lista) {
  out.println("<tr>");
  out.println("<td>" + aluno.getMatricula() + "</td>");
  out.println("<td>" + aluno.getMatricula() + "</td>");
  out.println("<td><a href=''>Alterar</a>");
  out.println("<a href=''>Excluir</a></td>");
  out.println("</tr>");
}

out.println("</table>");

r) Apague o corpo do método doPost() e lance uma exceção ServletException com a mensagem "Método não suportado".

throw new ServletException("Método não suportado");

s) Apague o método processRequest() do servlet ListarAlunoServlet.

t) No menu Executar acione a opção Executar Projeto e acesse a URL localhost:8081/Atividade05/aluno pelo navegador. Foi exibida uma lista dos alunos cadastrados?



2. Criar um servlet para incluir um aluno.

a) Crie um servlet IncluirAlunoServlet no pacote controle.

b) Faça o padrão de URL do servlet ser "/aluno/incluir".

c) Apague o corpo do método doGet() que exibirá um formulário de incluir aluno. 

d) Dentro do método altere o conteúdo da resposta HTTP para um texto HTML com a codificação UTF-8.

e) Crie uma variável out do tipo PrintWriter e inicialize-a a partir do método getWriter() da variável response.

f) Utilize o método println() da variável out para imprimir a seguinte página HTML (Dica: utilize o método encodeURL() da variável response para gerar os valores de action do formulário e de href do link).

<!DOCTYPE html>
<html>
<head>
<title>Cadastro de Alunos</title>
</head>
<body> 
	<h1>Incluir Aluno</h1>
        <form action="/aluno/incluir" method="post">
		<div>
			<label>Matrícula:</label>
			<input type="text" name="matricula" size="15">
		</div>
		<div>
			<label>Nome:</label>
			<input type="text" name="nome" size="30">
		</div>
		<input type="submit" value="Salvar"/>
		<a href="/aluno/listar">Desistir</a>
	</form>
</body>
</html>

g) Apague o corpo do método doPost() para seja implementado a inclusão de alunos. 

h) Dentro do método declare uma variável aluno e inicialize-a com uma instância de Aluno.

i) Atribua valor as propriedades matricula e nome de aluno a partir dos parâmetros da requisição HTTP.

aluno.setMatricula(Integer.parseInt(request.getParameter("matricula"));
aluno.setNome(request.getParameter("nome");

j) Declare uma variável bo e inicialize-a com uma instância de AlunoBO.

k) Chame o método incluir() da variável bo passando como parâmetro a variável aluno.

l) Repasse a exceção NegocioException como ServletException.

try {
   bo.incluir(aluno);
} catch (NegocioException e) {
   throw new ServletException("", NegocioException);
}

m) Faça o método doPost redirecionar para a listagem de alunos.

response.sendRedirect(request.getContextPath()+"/aluno");

n) Apague o método processRequest() do servlet IncluirAlunoServlet.

o) Inclua um link na listagem de alunos que carregue o servlet IncluirAlunoServlet (Dica: imprima o link entre a linha que imprime h1 e a linha que imprime table).

out.println("<h1>Listagem de Alunos</h1>");
out.println("<a href='" + response.encodeURL("/aluno/incluir") + "'>Incluir</a>");
out.println("<table>");

p) Recarregue a listagem de alunos no navegador e acione o link Incluir. Foi exibido o formulário de incluir aluno?

q) Preencha o formulário e acione Salvar. Qual foi o resultado?



3. Criar um servlet para alterar um aluno.

a) Crie um servlet AlterarAlunoServlet no pacote controle.

b) Faça o padrão de URL do servlet ser "/aluno/alterar".

c) Apague o corpo do método doGet() para que seja implementado a alteração de alunos. 

d) Dentro do método declare uma variável aluno e inicialize-a com uma instância de Aluno.

e) Declare uma variável id e inicialize-a com o valor do parâmetro id da requisição HTTP.

int id = Integer.parseInt(request.getParameter("id"));

f) Declare uma variável bo e inicialize-a com uma instância de AlunoBO.

g) Chame o método consultar() da variável bo passando como parâmetro a variável id. Armazene o retorno na variável aluno.

h) Repasse a exceção NegocioException como ServletException.

i) Altere o conteúdo da resposta HTTP para um texto HTML com a codificação UTF-8.

j) Crie uma variável out do tipo PrintWriter e inicialize-a a partir do método getWriter() da variável response.

k) Utilize o método println() da variável out para imprimir a seguinte página HTML (Dica: utilize os métodos getter da classe Aluno para obter os valores de id, matricula e nome aos respectivos campos do formulário).

<!DOCTYPE html>
<html>
<head>
<title>Cadastro de Alunos</title>
</head>
<body> 
	<h1>Alterar Aluno</h1>
        <form action="/aluno/alterar" method="post">
           	<input type="hidden" name="id" value=""/>
		<div>
			<label>Matrícula:</label>
			<input type="text" name="matricula" size="15" value="">
		</div>
		<div>
			<label>Nome:</label>
			<input type="text" name="nome" size="30" value="">
		</div>
		<input type="submit" value="Salvar"/>
		<a href="/aluno/listar">Desistir</a>
	</form>
</body>
</html>

l) Apague o corpo do método doPost() para que seja implementado a alteração de alunos. 

m) Dentro do método declare uma variável aluno e inicialize-a com uma instância de Aluno.

n) Atribua valor as propriedades id, matricula e nome de aluno a partir dos parâmetros da requisição HTTP.

aluno.setId(Integer.parseInt(request.getParameter("id"));
aluno.setMatricula(Integer.parseInt(request.getParameter("matricula"));
aluno.setNome(request.getParameter("nome");

o) Declare uma variável bo e inicialize-a com uma instância de AlunoBO.

p) Chame o método alterar() da variável bo passando como parâmetro a variável aluno.

q) Repasse a exceção NegocioException como ServletException.

try {
   bo.alterar(aluno);
} catch (NegocioException e) {
   throw new ServletException("", NegocioException);
}

r) Faça o método doPost redirecionar para a listagem de alunos.

s) Apague o método processRequest() do servlet AlterarAlunoServlet.

t) Na listagem de alunos faça o link Alterar referenciar o servlet AlterarAlunoServlet passando o parâmetro id.

out.println("<td><a href='" + response.encodeURL("/aluno/alterar?id=") + aluno.getId() + "'>Alterar</a>");

u) Recarregue a listagem de alunos no navegador e acione o link Alterar. Foi exibido o formulário de alterar aluno?

v) Preencha o formulário e acione Salvar. Qual foi o resultado?



4. Criar um servlet para excluir um aluno.

a) Crie um servlet ExcluirAlunoServlet no pacote controle.

b) Faça o padrão de URL do servlet ser "/aluno/excluir".

c) Apague o corpo do método doGet() para que seja implementado a exclusão de alunos. 

d) Dentro do método uma variável id e inicialize-a com o valor do parâmetro id da requisição HTTP.

e) Declare uma variável bo e inicialize-a com uma instância de AlunoBO.

f) Chame o método excluir() da variável bo passando como parâmetro a variável id. 

g) Repasse a exceção NegocioException como ServletException.

try {
   bo.excluir(id);
} catch (NegocioException e) {
   throw new ServletException("", NegocioException);
}
 
h) Faça o método doGet redirecionar para a listagem de alunos.

i) Apague o corpo do método doPost() e lance uma exceção ServletException com a mensagem "Método não suportado".

j) Apague o método processRequest() do servlet ExcluirAlunoServlet.

k) Na listagem de alunos faça o link Excluir referenciar o servlet ExcluirAlunoServlet passando o parâmetro id.

out.println("<a href='" + response.encodeURL("/aluno/excluir?id=") + aluno.getId() + "' onclick='return confirm('Deseja excluir o aluno?');'>Excluir</a></td>");

l) Recarregue a listagem de alunos no navegador e acione o link Excluir. Em seguida, confirme a exclusão. Qual foi o resultado?

m) Adicione os arquivos no git local e faça o commit com o comentário "Adicionando servlets em Atividade05".

n) Envie os arquivos versionados para o git remoto acionando a opção Expandir para Upstream do menu Equipe->Remoto. 
